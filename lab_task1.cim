begin
  external class demos="demos.atr";
  demos
  begin

    !!!!!!!!!!!!!!!!!!!
    !!!! VARIABLES !!!!
    !!!!!!!!!!!!!!!!!!!

    !! Task specific variables;
	  integer Tw = 110;
	  integer Tn = 20;
	  integer Tc = 0.1;
	  integer Ts = 2;
    long real lambda;


    !! Demos variables;
    ref (Res) controller;
    ref (Res) server;
    ref (IDist) generatorIntensity_;          ! ref (RDist) generatorIntensity_;
    ref (IDist) random_;
    ref (BDist) controller_;
    ref (Tally) delay_;


    !!!!!!!!!!!!!!!!!!!!!!!!
    !!!! ENTITY CLASSES !!!!
    !!!!!!!!!!!!!!!!!!!!!!!!

    !! Entity: Packet;
    Entity class Packet;
    begin
      if random_.sample <= 95 then begin
        long real timestamp;
        timestamp := time;
        hold(Tw);
        hold(Tn);
        controller.acquire(1);
        hold(Tc);
        controller.release(1);
        server.acquire(1);
        hold(Ts);
        server.release(1);
        delay_.update(time-timestamp);
      end;
    end;

    !! Entity: Generator;
    Entity class Generator;
    begin
      integer i;
      for i:= 1 step 1 until 1000 do
        begin
          new Packet(edit("packet",i)).schedule(now);
          hold(generatorIntensity_.sample);
        end;
    end;


    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    !!!! Assign variables values !!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    lambda := 1;

    ! y = 1 emacs;
    generatorIntensity_ :- new Poisson("packet", lambda);   ! NegExp("packet", lambda);
    random_ :- new RandInt("rand", 0, 100);

    delay_ :- new Tally("delay");
    controller :- new Res("controller", 1);
    server :- new Res("server", 2);

    new Generator("Gen").schedule(0);
    hold(300000000);
  end;
end;
