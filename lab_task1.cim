! Recommended compiler:         emacs                                                         ;
! Compile with extended memory: cim -m500 lab_task1.cim                                       ;
! Run compiled program:         ./lab_task1                                                   ;
! Run compiled program to file: ./lab_task1 > delay_output.csv  || ./lab_task1 > output.txt   ;

begin
  external class demos="demos.atr";
  demos
  begin

    !!!!!!!!!!!!!!!!!!!!!!!!!! ;
    !!!! DEFINE VARIABLES !!!! ;
    !!!!!!!!!!!!!!!!!!!!!!!!!! ;

    !! Task Specific Variables !! ;
	  integer Tw = 110;
	  integer Tn = 20;
	  integer Tc = 0.1;
	  integer Ts = 2;
	  integer numberofpackets = 100000;
	  integer numberofservers = 2;
    long real lambda = ((100000 / 50) / 1000);         ! Task 1.4: ((1000 / 50) / 1000) = 0.02, ((10000 / 50) / 1000) = 0.2, ((100000 / 50) / 1000) = 2;

    !! DEMOS Variables !! ;
    ref (Res) controller;
    ref (Res) server;
    ref (RDist) generatorIntensity_;
    ref (BDist) controller_, packetLoss_;
    ref (Tally) delay_;


    !!!!!!!!!!!!!!!!!!!!!!!! ;
    !!!! ENTITY CLASSES !!!! ;
    !!!!!!!!!!!!!!!!!!!!!!!! ;

    !! Entity: Packet !! ;
    Entity class Packet;
    begin
      if packetLoss_.sample then begin
        long real timestamp;
        timestamp := time;
        hold(Tw);
        hold(Tn);
        controller.acquire(1);
        hold(Tc);
        controller.release(1);
        server.acquire(1);
        hold(Ts);
        server.release(1);
        delay_.update(time-timestamp);
        !outint (time-timestamp,0);
        !outimage;
      end
      else begin
        !outtext("0,loss");
        !outimage;
      end;
    end;

    !! Entity: Generator !! ;
    Entity class Generator;
    begin
      integer i;
      for i:= 1 step 1 until numberofpackets do
        begin
          new Packet(edit("packet",i)).schedule(now);
          hold(generatorIntensity_.sample);
        end;
    end;


    !!!!!!!!!!!!!!!!!!!!!!!!! ;
    !!!! VARIABLE VALUES !!!! ;
    !!!!!!!!!!!!!!!!!!!!!!!!! ;

    !! Packet Generator Intensity !! ;
    generatorIntensity_ :- new NegExp("packet", lambda);

    !! Packet Loss Probability | 5% Loss !! ;
    packetLoss_ :- new Draw("Loss", 0.95);

    !! Delay Time Counter !! ;
    delay_ :- new Tally("delay");

    !! Controller & Server Mutex !! ;
    controller :- new Res("controller", 1);
    server :- new Res("server", numberofservers);

    !! Create New Generator Entity !! ;
    new Generator("Gen").schedule(0);

    !! Force Hold Simulation Active !! ;
    hold(300000000);
  end;
end;
